version: "3.7"

services:
  webserver:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    volumes:
      - ./src:/app/src
      - ./templates:/app/templates
      - ./public:/app/public
      - ./nodemon.json:/app/nodemon.json
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://db_user:db_pass@database/db_name
      - APP_VERSION=development
    command: npm run serve
  cli:
    # docker-compose -f docker-compose.dev.yml run cli
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    volumes:
      - ./src:/app/src
      - ./templates:/app/templates
      - ./public:/app/public
      - ./seeds:/app/seeds
      - ./migrations:/app/migrations
    environment:
      - DATABASE_URL=postgres://db_user:db_pass@database/db_name
    command: /bin/sh
  database:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_DB=db_name
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=db_pass
      - PGDATA=/var/lib/postgresql/data/pgdata
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
     - ./postgres-data:/var/lib/postgresql/data
